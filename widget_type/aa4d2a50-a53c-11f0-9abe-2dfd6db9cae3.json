{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "gauge_creado",
    "name" : "Gauge Creado",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "timeseries",
      "sizeX" : 8,
      "sizeY" : 5,
      "resources" : [ {
        "url" : "https://test-thingsboard-oficina.s3.us-east-1.amazonaws.com/d3.v7.min.js"
      } ],
      "templateHtml" : "<div class=\"gauge-container\">\r\n  <svg id=\"gaugeChart\" class=\"gauge-svg\"></svg>\r\n  <div id=\"gaugeValue\" class=\"gauge-value\"></div>\r\n</div>",
      "templateCss" : ".gauge-container {\r\n  --gauge-color: #00C853;                \r\n  --gauge-bg-color: rgba(150,150,150,0.15); \r\n  --gauge-font-size: 2.4em;              \r\n  --gauge-font-weight: 700;            \r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background: transparent;\r\n}\r\n\r\n.gauge-svg {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n/* Fondo del gauge */\r\n.gauge-bg {\r\n  fill: none;\r\n  stroke: var(--gauge-bg-color);\r\n  stroke-width: 10px;\r\n}\r\n\r\n/* Barra de progreso */\r\n.gauge-progress {\r\n  fill: none;\r\n  stroke: var(--gauge-color);\r\n  stroke-width: 10px;\r\n  stroke-linecap: round;\r\n  transition: stroke 0.3s ease;\r\n}\r\n\r\n/* Valor central */\r\n.gauge-value {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-size: var(--gauge-font-size);\r\n  font-weight: var(--gauge-font-weight);\r\n  color: var(--gauge-color);\r\n  text-align: center;\r\n  pointer-events: none;\r\n}\r\n",
      "controllerScript" : "self.onInit = function () {\r\n  const ctx = self.ctx;\r\n\r\n  ctx.parameter = ctx.settings.parameter || 'progress';\r\n  ctx.minValue = ctx.settings.minValue || 0;\r\n  ctx.maxValue = ctx.settings.maxValue || 100;\r\n  ctx.unit = ctx.settings.unit || '%';\r\n\r\n  ctx.$container.css({\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    height: '100%',\r\n    background: 'transparent',\r\n    color: 'inherit',\r\n    position: 'relative'\r\n  });\r\n\r\n  if (!ctx.$container.find(\".gauge-container\").length) {\r\n    ctx.$container.append('<div class=\"gauge-container\" style=\"width:100%; height:100%;\"><svg id=\"gaugeChart\"></svg></div>');\r\n  }\r\n\r\n  if (!ctx.$container.find(\"#gaugeValue\").length) {\r\n    ctx.$container.append('<div id=\"gaugeValue\" style=\"position:absolute; text-align:center; font-size:2em;\"></div>');\r\n  }\r\n};\r\n\r\nself.onDataUpdated = function () {\r\n  const ctx = self.ctx;\r\n  const data = ctx.data;\r\n\r\n  if (!data || !data.length || !data[0].data || !data[0].data.length) return;\r\n\r\n  const value = data[0].data[data[0].data.length - 1][1];\r\n  const val = Math.max(ctx.minValue, Math.min(ctx.maxValue, value));\r\n\r\n  const container = ctx.$container.find(\".gauge-container\")[0];\r\n  const width = container.offsetWidth;\r\n  const height = container.offsetHeight;\r\n  const radius = Math.min(width, height) / 2.4;\r\n\r\n  const thickness = 20;\r\n\r\n  const svg = d3.select(container).select(\"#gaugeChart\");\r\n  svg.selectAll(\"*\").remove();\r\n  svg.attr(\"width\", width).attr(\"height\", height);\r\n\r\n  const g = svg.append(\"g\")\r\n    .attr(\"transform\", `translate(${width / 2}, ${height / 2})`);\r\n\r\n  const bgArc = d3.arc()\r\n    .innerRadius(radius - thickness / 2)\r\n    .outerRadius(radius + thickness / 2)\r\n    .startAngle(0)\r\n    .endAngle(2 * Math.PI);\r\n\r\n  g.append(\"path\")\r\n    .attr(\"d\", bgArc)\r\n    .attr(\"fill\", \"#222\")\r\n    .attr(\"opacity\", 0.15);\r\n\r\n  const scale = d3.scaleLinear()\r\n    .domain([ctx.minValue, ctx.maxValue])\r\n    .range([0, 2 * Math.PI]);\r\n\r\n  const angle = scale(val);\r\n\r\n  const color = getComputedStyle(container).getPropertyValue('--gauge-color').trim() || '#00C853';\r\n\r\n  const progressArc = d3.arc()\r\n    .innerRadius(radius - thickness / 2)\r\n    .outerRadius(radius + thickness / 2)\r\n    .startAngle(0)\r\n    .endAngle(angle);\r\n\r\n  g.append(\"path\")\r\n    .attr(\"d\", progressArc)\r\n    .attr(\"fill\", color);\r\n\r\n\r\n\r\n  ctx.$container.find(\"#gaugeValue\").text(`${val.toFixed(0)}${ctx.unit}`);\r\n};\r\n\r\nself.onResize = function () {\r\n  self.onDataUpdated();\r\n};\r\n",
      "settingsForm" : [ ],
      "dataKeySettingsForm" : [ ],
      "latestDataKeySettingsForm" : [ ],
      "settingsDirective" : "tb-time-series-chart-widget-settings",
      "dataKeySettingsDirective" : "tb-time-series-chart-key-settings",
      "latestDataKeySettingsDirective" : "",
      "hasBasicMode" : false,
      "basicModeDirective" : "",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#FFC107\",\"settings\":{\"type\":\"bar\"},\"_hash\":0.5534217244004682,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\",\"aggregationType\":null,\"units\":null,\"decimals\":null,\"usePostProcessing\":null,\"postFuncBody\":null}],\"alarmFilterConfig\":{\"statusList\":[\"ACTIVE\"]},\"latestDataKeys\":null}],\"timewindow\":{\"hideInterval\":false,\"hideLastInterval\":false,\"hideQuickInterval\":false,\"hideAggregation\":false,\"hideAggInterval\":false,\"hideTimezone\":false,\"selectedTab\":0,\"realtime\":{\"realtimeType\":0,\"timewindowMs\":60000,\"quickInterval\":\"CURRENT_DAY\",\"interval\":1000},\"aggregation\":{\"type\":\"AVG\",\"limit\":25000},\"timezone\":null},\"showTitle\":true,\"backgroundColor\":\"rgba(0, 0, 0, 0)\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"0px\",\"settings\":{\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"top\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"thresholds\":[],\"dataZoom\":true,\"stack\":false,\"yAxis\":{\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"left\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\"},\"xAxis\":{\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"bottom\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":10,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"ticksFormat\":{},\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\"},\"legendLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"16px\"},\"legendLabelColor\":\"rgba(0, 0, 0, 0.76)\",\"showTooltip\":true,\"tooltipTrigger\":\"axis\",\"tooltipValueFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"500\",\"lineHeight\":\"16px\"},\"tooltipValueColor\":\"rgba(0, 0, 0, 0.76)\",\"tooltipShowDate\":true,\"tooltipDateFormat\":{\"format\":null,\"lastUpdateAgo\":false,\"custom\":false,\"auto\":true,\"autoDateFormatSettings\":{}},\"tooltipDateFont\":{\"family\":\"Roboto\",\"size\":11,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"16px\"},\"tooltipDateColor\":\"rgba(0, 0, 0, 0.76)\",\"tooltipDateInterval\":true,\"tooltipBackgroundColor\":\"rgba(255, 255, 255, 0.76)\",\"tooltipBackgroundBlur\":4,\"background\":{\"type\":\"color\",\"color\":\"#fff\",\"overlay\":{\"enabled\":false,\"color\":\"rgba(255,255,255,0.72)\",\"blur\":3}},\"yAxes\":{\"default\":{\"units\":null,\"decimals\":0,\"show\":true,\"label\":\"\",\"labelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"600\",\"lineHeight\":\"1\"},\"labelColor\":\"rgba(0, 0, 0, 0.54)\",\"position\":\"left\",\"showTickLabels\":true,\"tickLabelFont\":{\"family\":\"Roboto\",\"size\":12,\"sizeUnit\":\"px\",\"style\":\"normal\",\"weight\":\"400\",\"lineHeight\":\"1\"},\"tickLabelColor\":\"rgba(0, 0, 0, 0.54)\",\"ticksFormatter\":null,\"showTicks\":true,\"ticksColor\":\"rgba(0, 0, 0, 0.54)\",\"showLine\":true,\"lineColor\":\"rgba(0, 0, 0, 0.54)\",\"showSplitLines\":true,\"splitLinesColor\":\"rgba(0, 0, 0, 0.12)\",\"id\":\"default\",\"order\":0}},\"noAggregationBarWidthSettings\":{\"strategy\":\"group\",\"groupWidth\":{\"relative\":true,\"relativeWidth\":2,\"absoluteWidth\":1000},\"barWidth\":{\"relative\":true,\"relativeWidth\":2,\"absoluteWidth\":1000}},\"animation\":{\"animation\":true,\"animationThreshold\":2000,\"animationDuration\":500,\"animationEasing\":\"cubicOut\",\"animationDelay\":0,\"animationDurationUpdate\":300,\"animationEasingUpdate\":\"cubicOut\",\"animationDelayUpdate\":0},\"padding\":\"12px\"},\"title\":\"Time series chart\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":null,\"mobileHeight\":null,\"configMode\":\"basic\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\",\"useDashboardTimewindow\":false,\"displayTimewindow\":true,\"titleFont\":{\"size\":16,\"sizeUnit\":\"px\",\"family\":\"Roboto\",\"weight\":\"500\",\"style\":\"normal\",\"lineHeight\":\"24px\"},\"titleColor\":\"rgba(0, 0, 0, 0.87)\",\"titleTooltip\":\"\",\"widgetStyle\":{},\"widgetCss\":\"\",\"pageSize\":1024,\"units\":\"\",\"decimals\":null,\"noDataDisplayMessage\":\"\",\"timewindowStyle\":{\"showIcon\":false,\"iconSize\":\"24px\",\"icon\":null,\"iconPosition\":\"left\",\"font\":{\"size\":12,\"sizeUnit\":\"px\",\"family\":\"Roboto\",\"weight\":\"400\",\"style\":\"normal\",\"lineHeight\":\"16px\"},\"color\":\"rgba(0, 0, 0, 0.38)\",\"displayTypePrefix\":true},\"margin\":\"0px\",\"borderRadius\":\"0px\",\"iconSize\":\"0px\"}"
    },
    "externalId" : null,
    "resources" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "aa4d2a50-a53c-11f0-9abe-2dfd6db9cae3"
    },
    "scada" : false,
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}